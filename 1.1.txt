#include<iostream>
#include<iomanip>
#include <sstream>
#include <cmath>
using namespace std;

const double PI= acos(-1);
class Shape
{
    public:
        Shape() {}
        virtual double area() = 0;
        virtual void input() = 0;
        virtual double volume() = 0;
        virtual ~Shape() {}
};
class Cuboid:public Shape
{
    private:
        double l,w,h;
    public:
        Cuboid(int i=0,int j=0,int k=0)
        {
            l=i;w=j;h=k;
        }
        void input()
        {
            cin>>l>>w>>h;
        }
        double area()
        {

            return 2*(l*w+l*h+w*h);
        }
        double volume()
        {
            return l*w*h;
        }
};
class Cylinder:public Shape
{
    private:
        double r,h;
    public:
        Cylinder(double i=0,double j=0)
        {
            r=i;h=j;
        }
        void input()
        {
            cin>>r>>h;
        }
        double area()
        {
            return 2*PI*r*r+2*PI*r*h;
        }
        double volume()
        {
            return PI*r*r*h;
        }
};
class Ball:public Shape
{
    private:
        double r;
    public: 
        Ball(double i=0)
        {
            r=i;
        }
        void input()
        {
            cin>>r;
        }
        double area()
        {
            return 4*PI*r*r;
        }
        double volume()
        {
            return (PI*r*r*r*4/3);
        }
};
void work(Shape *s) {
    s->input();
    cout << s->area() << " " << s->volume() << endl;
    delete s;
}
int main() {
    char c;
    while (cin >> c) {
        switch (c) {
            case 'c': work(new Cuboid()); break;
            case 'y': work(new Cylinder()); break;
            case 'q': work(new Ball()); break;
            default: break;
        }
    }
    return 0;
}
